/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/typewriter-effect";
exports.ids = ["vendor-chunks/typewriter-effect"];
exports.modules = {

/***/ "(ssr)/./node_modules/typewriter-effect/dist/react.js":
/*!******************************************************!*\
  !*** ./node_modules/typewriter-effect/dist/react.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("!function (e, t) {\n   true ? module.exports = t(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\")) : 0;\n}(\"undefined\" != typeof self ? self : this, e => (() => {\n  var t = {\n      7403: (e, t, r) => {\n        \"use strict\";\n\n        r.d(t, {\n          default: () => S\n        });\n        var n = r(4087),\n          o = r.n(n);\n        const a = function (e) {\n            return new RegExp(/<[a-z][\\s\\S]*>/i).test(e);\n          },\n          i = function (e, t) {\n            return Math.floor(Math.random() * (t - e + 1)) + e;\n          };\n        var s = \"TYPE_CHARACTER\",\n          u = \"REMOVE_CHARACTER\",\n          c = \"REMOVE_ALL\",\n          p = \"REMOVE_LAST_VISIBLE_NODE\",\n          l = \"PAUSE_FOR\",\n          f = \"CALL_FUNCTION\",\n          v = \"ADD_HTML_TAG_ELEMENT\",\n          d = \"CHANGE_DELETE_SPEED\",\n          h = \"CHANGE_DELAY\",\n          y = \"CHANGE_CURSOR\",\n          b = \"PASTE_STRING\",\n          m = \"HTML_TAG\";\n        function _(e) {\n          return _ = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n            return typeof e;\n          } : function (e) {\n            return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n          }, _(e);\n        }\n        function g(e, t) {\n          var r = Object.keys(e);\n          if (Object.getOwnPropertySymbols) {\n            var n = Object.getOwnPropertySymbols(e);\n            t && (n = n.filter(function (t) {\n              return Object.getOwnPropertyDescriptor(e, t).enumerable;\n            })), r.push.apply(r, n);\n          }\n          return r;\n        }\n        function w(e) {\n          for (var t = 1; t < arguments.length; t++) {\n            var r = null != arguments[t] ? arguments[t] : {};\n            t % 2 ? g(Object(r), !0).forEach(function (t) {\n              O(e, t, r[t]);\n            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : g(Object(r)).forEach(function (t) {\n              Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n            });\n          }\n          return e;\n        }\n        function x(e) {\n          return function (e) {\n            if (Array.isArray(e)) return j(e);\n          }(e) || function (e) {\n            if (\"undefined\" != typeof Symbol && null != e[Symbol.iterator] || null != e[\"@@iterator\"]) return Array.from(e);\n          }(e) || function (e, t) {\n            if (e) {\n              if (\"string\" == typeof e) return j(e, t);\n              var r = Object.prototype.toString.call(e).slice(8, -1);\n              return \"Object\" === r && e.constructor && (r = e.constructor.name), \"Map\" === r || \"Set\" === r ? Array.from(e) : \"Arguments\" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? j(e, t) : void 0;\n            }\n          }(e) || function () {\n            throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n          }();\n        }\n        function j(e, t) {\n          (null == t || t > e.length) && (t = e.length);\n          for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];\n          return n;\n        }\n        function E(e, t) {\n          for (var r = 0; r < t.length; r++) {\n            var n = t[r];\n            n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, T(n.key), n);\n          }\n        }\n        function O(e, t, r) {\n          return (t = T(t)) in e ? Object.defineProperty(e, t, {\n            value: r,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0\n          }) : e[t] = r, e;\n        }\n        function T(e) {\n          var t = function (e, t) {\n            if (\"object\" !== _(e) || null === e) return e;\n            var r = e[Symbol.toPrimitive];\n            if (void 0 !== r) {\n              var n = r.call(e, \"string\");\n              if (\"object\" !== _(n)) return n;\n              throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n            }\n            return String(e);\n          }(e);\n          return \"symbol\" === _(t) ? t : String(t);\n        }\n        const S = function () {\n          function e(t, r) {\n            var _ = this;\n            if (function (e, t) {\n              if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n            }(this, e), O(this, \"state\", {\n              cursorAnimation: null,\n              lastFrameTime: null,\n              pauseUntil: null,\n              eventQueue: [],\n              eventLoop: null,\n              eventLoopPaused: !1,\n              reverseCalledEvents: [],\n              calledEvents: [],\n              visibleNodes: [],\n              initialOptions: null,\n              elements: {\n                container: null,\n                wrapper: document.createElement(\"span\"),\n                cursor: document.createElement(\"span\")\n              }\n            }), O(this, \"options\", {\n              strings: null,\n              cursor: \"|\",\n              delay: \"natural\",\n              pauseFor: 1500,\n              deleteSpeed: \"natural\",\n              loop: !1,\n              autoStart: !1,\n              devMode: !1,\n              skipAddStyles: !1,\n              wrapperClassName: \"Typewriter__wrapper\",\n              cursorClassName: \"Typewriter__cursor\",\n              stringSplitter: null,\n              onCreateTextNode: null,\n              onRemoveNode: null\n            }), O(this, \"setupWrapperElement\", function () {\n              _.state.elements.container && (_.state.elements.wrapper.className = _.options.wrapperClassName, _.state.elements.cursor.className = _.options.cursorClassName, _.state.elements.cursor.innerHTML = _.options.cursor, _.state.elements.container.innerHTML = \"\", _.state.elements.container.appendChild(_.state.elements.wrapper), _.state.elements.container.appendChild(_.state.elements.cursor));\n            }), O(this, \"start\", function () {\n              return _.state.eventLoopPaused = !1, _.runEventLoop(), _;\n            }), O(this, \"pause\", function () {\n              return _.state.eventLoopPaused = !0, _;\n            }), O(this, \"stop\", function () {\n              return _.state.eventLoop && ((0, n.cancel)(_.state.eventLoop), _.state.eventLoop = null), _;\n            }), O(this, \"pauseFor\", function (e) {\n              return _.addEventToQueue(l, {\n                ms: e\n              }), _;\n            }), O(this, \"typeOutAllStrings\", function () {\n              return \"string\" == typeof _.options.strings ? (_.typeString(_.options.strings).pauseFor(_.options.pauseFor), _) : (_.options.strings.forEach(function (e) {\n                _.typeString(e).pauseFor(_.options.pauseFor).deleteAll(_.options.deleteSpeed);\n              }), _);\n            }), O(this, \"typeString\", function (e) {\n              var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;\n              if (a(e)) return _.typeOutHTMLString(e, t);\n              if (e) {\n                var r = (_.options || {}).stringSplitter,\n                  n = \"function\" == typeof r ? r(e) : e.split(\"\");\n                _.typeCharacters(n, t);\n              }\n              return _;\n            }), O(this, \"pasteString\", function (e) {\n              var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;\n              return a(e) ? _.typeOutHTMLString(e, t, !0) : (e && _.addEventToQueue(b, {\n                character: e,\n                node: t\n              }), _);\n            }), O(this, \"typeOutHTMLString\", function (e) {\n              var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,\n                r = arguments.length > 2 ? arguments[2] : void 0,\n                n = function (e) {\n                  var t = document.createElement(\"div\");\n                  return t.innerHTML = e, t.childNodes;\n                }(e);\n              if (n.length > 0) for (var o = 0; o < n.length; o++) {\n                var a = n[o],\n                  i = a.innerHTML;\n                a && 3 !== a.nodeType ? (a.innerHTML = \"\", _.addEventToQueue(v, {\n                  node: a,\n                  parentNode: t\n                }), r ? _.pasteString(i, a) : _.typeString(i, a)) : a.textContent && (r ? _.pasteString(a.textContent, t) : _.typeString(a.textContent, t));\n              }\n              return _;\n            }), O(this, \"deleteAll\", function () {\n              var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"natural\";\n              return _.addEventToQueue(c, {\n                speed: e\n              }), _;\n            }), O(this, \"changeDeleteSpeed\", function (e) {\n              if (!e) throw new Error(\"Must provide new delete speed\");\n              return _.addEventToQueue(d, {\n                speed: e\n              }), _;\n            }), O(this, \"changeDelay\", function (e) {\n              if (!e) throw new Error(\"Must provide new delay\");\n              return _.addEventToQueue(h, {\n                delay: e\n              }), _;\n            }), O(this, \"changeCursor\", function (e) {\n              if (!e) throw new Error(\"Must provide new cursor\");\n              return _.addEventToQueue(y, {\n                cursor: e\n              }), _;\n            }), O(this, \"deleteChars\", function (e) {\n              if (!e) throw new Error(\"Must provide amount of characters to delete\");\n              for (var t = 0; t < e; t++) _.addEventToQueue(u);\n              return _;\n            }), O(this, \"callFunction\", function (e, t) {\n              if (!e || \"function\" != typeof e) throw new Error(\"Callbak must be a function\");\n              return _.addEventToQueue(f, {\n                cb: e,\n                thisArg: t\n              }), _;\n            }), O(this, \"typeCharacters\", function (e) {\n              var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;\n              if (!e || !Array.isArray(e)) throw new Error(\"Characters must be an array\");\n              return e.forEach(function (e) {\n                _.addEventToQueue(s, {\n                  character: e,\n                  node: t\n                });\n              }), _;\n            }), O(this, \"removeCharacters\", function (e) {\n              if (!e || !Array.isArray(e)) throw new Error(\"Characters must be an array\");\n              return e.forEach(function () {\n                _.addEventToQueue(u);\n              }), _;\n            }), O(this, \"addEventToQueue\", function (e, t) {\n              var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n              return _.addEventToStateProperty(e, t, r, \"eventQueue\");\n            }), O(this, \"addReverseCalledEvent\", function (e, t) {\n              var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n              return _.options.loop ? _.addEventToStateProperty(e, t, r, \"reverseCalledEvents\") : _;\n            }), O(this, \"addEventToStateProperty\", function (e, t) {\n              var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n                n = arguments.length > 3 ? arguments[3] : void 0,\n                o = {\n                  eventName: e,\n                  eventArgs: t || {}\n                };\n              return _.state[n] = r ? [o].concat(x(_.state[n])) : [].concat(x(_.state[n]), [o]), _;\n            }), O(this, \"runEventLoop\", function () {\n              _.state.lastFrameTime || (_.state.lastFrameTime = Date.now());\n              var e = Date.now(),\n                t = e - _.state.lastFrameTime;\n              if (!_.state.eventQueue.length) {\n                if (!_.options.loop) return;\n                _.state.eventQueue = x(_.state.calledEvents), _.state.calledEvents = [], _.options = w({}, _.state.initialOptions);\n              }\n              if (_.state.eventLoop = o()(_.runEventLoop), !_.state.eventLoopPaused) {\n                if (_.state.pauseUntil) {\n                  if (e < _.state.pauseUntil) return;\n                  _.state.pauseUntil = null;\n                }\n                var r,\n                  n = x(_.state.eventQueue),\n                  a = n.shift();\n                if (!(t <= (r = a.eventName === p || a.eventName === u ? \"natural\" === _.options.deleteSpeed ? i(40, 80) : _.options.deleteSpeed : \"natural\" === _.options.delay ? i(120, 160) : _.options.delay))) {\n                  var g = a.eventName,\n                    j = a.eventArgs;\n                  switch (_.logInDevMode({\n                    currentEvent: a,\n                    state: _.state,\n                    delay: r\n                  }), g) {\n                    case b:\n                    case s:\n                      var E = j.character,\n                        O = j.node,\n                        T = document.createTextNode(E),\n                        S = T;\n                      _.options.onCreateTextNode && \"function\" == typeof _.options.onCreateTextNode && (S = _.options.onCreateTextNode(E, T)), S && (O ? O.appendChild(S) : _.state.elements.wrapper.appendChild(S)), _.state.visibleNodes = [].concat(x(_.state.visibleNodes), [{\n                        type: \"TEXT_NODE\",\n                        character: E,\n                        node: S\n                      }]);\n                      break;\n                    case u:\n                      n.unshift({\n                        eventName: p,\n                        eventArgs: {\n                          removingCharacterNode: !0\n                        }\n                      });\n                      break;\n                    case l:\n                      var A = a.eventArgs.ms;\n                      _.state.pauseUntil = Date.now() + parseInt(A);\n                      break;\n                    case f:\n                      var P = a.eventArgs,\n                        N = P.cb,\n                        C = P.thisArg;\n                      N.call(C, {\n                        elements: _.state.elements\n                      });\n                      break;\n                    case v:\n                      var L = a.eventArgs,\n                        k = L.node,\n                        D = L.parentNode;\n                      D ? D.appendChild(k) : _.state.elements.wrapper.appendChild(k), _.state.visibleNodes = [].concat(x(_.state.visibleNodes), [{\n                        type: m,\n                        node: k,\n                        parentNode: D || _.state.elements.wrapper\n                      }]);\n                      break;\n                    case c:\n                      var M = _.state.visibleNodes,\n                        R = j.speed,\n                        F = [];\n                      R && F.push({\n                        eventName: d,\n                        eventArgs: {\n                          speed: R,\n                          temp: !0\n                        }\n                      });\n                      for (var z = 0, Q = M.length; z < Q; z++) F.push({\n                        eventName: p,\n                        eventArgs: {\n                          removingCharacterNode: !1\n                        }\n                      });\n                      R && F.push({\n                        eventName: d,\n                        eventArgs: {\n                          speed: _.options.deleteSpeed,\n                          temp: !0\n                        }\n                      }), n.unshift.apply(n, F);\n                      break;\n                    case p:\n                      var I = a.eventArgs.removingCharacterNode;\n                      if (_.state.visibleNodes.length) {\n                        var U = _.state.visibleNodes.pop(),\n                          H = U.type,\n                          q = U.node,\n                          B = U.character;\n                        _.options.onRemoveNode && \"function\" == typeof _.options.onRemoveNode && _.options.onRemoveNode({\n                          node: q,\n                          character: B\n                        }), q && q.parentNode.removeChild(q), H === m && I && n.unshift({\n                          eventName: p,\n                          eventArgs: {}\n                        });\n                      }\n                      break;\n                    case d:\n                      _.options.deleteSpeed = a.eventArgs.speed;\n                      break;\n                    case h:\n                      _.options.delay = a.eventArgs.delay;\n                      break;\n                    case y:\n                      _.options.cursor = a.eventArgs.cursor, _.state.elements.cursor.innerHTML = a.eventArgs.cursor;\n                  }\n                  _.options.loop && (a.eventName === p || a.eventArgs && a.eventArgs.temp || (_.state.calledEvents = [].concat(x(_.state.calledEvents), [a]))), _.state.eventQueue = n, _.state.lastFrameTime = e;\n                }\n              }\n            }), t) if (\"string\" == typeof t) {\n              var g = document.querySelector(t);\n              if (!g) throw new Error(\"Could not find container element\");\n              this.state.elements.container = g;\n            } else this.state.elements.container = t;\n            r && (this.options = w(w({}, this.options), r)), this.state.initialOptions = w({}, this.options), this.init();\n          }\n          var t, r;\n          return t = e, (r = [{\n            key: \"init\",\n            value: function () {\n              var e, t;\n              this.setupWrapperElement(), this.addEventToQueue(y, {\n                cursor: this.options.cursor\n              }, !0), this.addEventToQueue(c, null, !0), !window || window.___TYPEWRITER_JS_STYLES_ADDED___ || this.options.skipAddStyles || (e = \".Typewriter__cursor{-webkit-animation:Typewriter-cursor 1s infinite;animation:Typewriter-cursor 1s infinite;margin-left:1px}@-webkit-keyframes Typewriter-cursor{0%{opacity:0}50%{opacity:1}100%{opacity:0}}@keyframes Typewriter-cursor{0%{opacity:0}50%{opacity:1}100%{opacity:0}}\", (t = document.createElement(\"style\")).appendChild(document.createTextNode(e)), document.head.appendChild(t), window.___TYPEWRITER_JS_STYLES_ADDED___ = !0), !0 === this.options.autoStart && this.options.strings && this.typeOutAllStrings().start();\n            }\n          }, {\n            key: \"logInDevMode\",\n            value: function (e) {\n              this.options.devMode && console.log(e);\n            }\n          }]) && E(t.prototype, r), Object.defineProperty(t, \"prototype\", {\n            writable: !1\n          }), e;\n        }();\n      },\n      8552: (e, t, r) => {\n        var n = r(852)(r(5639), \"DataView\");\n        e.exports = n;\n      },\n      1989: (e, t, r) => {\n        var n = r(1789),\n          o = r(401),\n          a = r(7667),\n          i = r(1327),\n          s = r(1866);\n        function u(e) {\n          var t = -1,\n            r = null == e ? 0 : e.length;\n          for (this.clear(); ++t < r;) {\n            var n = e[t];\n            this.set(n[0], n[1]);\n          }\n        }\n        u.prototype.clear = n, u.prototype.delete = o, u.prototype.get = a, u.prototype.has = i, u.prototype.set = s, e.exports = u;\n      },\n      8407: (e, t, r) => {\n        var n = r(7040),\n          o = r(4125),\n          a = r(2117),\n          i = r(7518),\n          s = r(4705);\n        function u(e) {\n          var t = -1,\n            r = null == e ? 0 : e.length;\n          for (this.clear(); ++t < r;) {\n            var n = e[t];\n            this.set(n[0], n[1]);\n          }\n        }\n        u.prototype.clear = n, u.prototype.delete = o, u.prototype.get = a, u.prototype.has = i, u.prototype.set = s, e.exports = u;\n      },\n      7071: (e, t, r) => {\n        var n = r(852)(r(5639), \"Map\");\n        e.exports = n;\n      },\n      3369: (e, t, r) => {\n        var n = r(4785),\n          o = r(1285),\n          a = r(6e3),\n          i = r(9916),\n          s = r(5265);\n        function u(e) {\n          var t = -1,\n            r = null == e ? 0 : e.length;\n          for (this.clear(); ++t < r;) {\n            var n = e[t];\n            this.set(n[0], n[1]);\n          }\n        }\n        u.prototype.clear = n, u.prototype.delete = o, u.prototype.get = a, u.prototype.has = i, u.prototype.set = s, e.exports = u;\n      },\n      3818: (e, t, r) => {\n        var n = r(852)(r(5639), \"Promise\");\n        e.exports = n;\n      },\n      8525: (e, t, r) => {\n        var n = r(852)(r(5639), \"Set\");\n        e.exports = n;\n      },\n      8668: (e, t, r) => {\n        var n = r(3369),\n          o = r(619),\n          a = r(2385);\n        function i(e) {\n          var t = -1,\n            r = null == e ? 0 : e.length;\n          for (this.__data__ = new n(); ++t < r;) this.add(e[t]);\n        }\n        i.prototype.add = i.prototype.push = o, i.prototype.has = a, e.exports = i;\n      },\n      6384: (e, t, r) => {\n        var n = r(8407),\n          o = r(7465),\n          a = r(3779),\n          i = r(7599),\n          s = r(4758),\n          u = r(4309);\n        function c(e) {\n          var t = this.__data__ = new n(e);\n          this.size = t.size;\n        }\n        c.prototype.clear = o, c.prototype.delete = a, c.prototype.get = i, c.prototype.has = s, c.prototype.set = u, e.exports = c;\n      },\n      2705: (e, t, r) => {\n        var n = r(5639).Symbol;\n        e.exports = n;\n      },\n      1149: (e, t, r) => {\n        var n = r(5639).Uint8Array;\n        e.exports = n;\n      },\n      577: (e, t, r) => {\n        var n = r(852)(r(5639), \"WeakMap\");\n        e.exports = n;\n      },\n      4963: e => {\n        e.exports = function (e, t) {\n          for (var r = -1, n = null == e ? 0 : e.length, o = 0, a = []; ++r < n;) {\n            var i = e[r];\n            t(i, r, e) && (a[o++] = i);\n          }\n          return a;\n        };\n      },\n      4636: (e, t, r) => {\n        var n = r(2545),\n          o = r(5694),\n          a = r(1469),\n          i = r(4144),\n          s = r(5776),\n          u = r(6719),\n          c = Object.prototype.hasOwnProperty;\n        e.exports = function (e, t) {\n          var r = a(e),\n            p = !r && o(e),\n            l = !r && !p && i(e),\n            f = !r && !p && !l && u(e),\n            v = r || p || l || f,\n            d = v ? n(e.length, String) : [],\n            h = d.length;\n          for (var y in e) !t && !c.call(e, y) || v && (\"length\" == y || l && (\"offset\" == y || \"parent\" == y) || f && (\"buffer\" == y || \"byteLength\" == y || \"byteOffset\" == y) || s(y, h)) || d.push(y);\n          return d;\n        };\n      },\n      2488: e => {\n        e.exports = function (e, t) {\n          for (var r = -1, n = t.length, o = e.length; ++r < n;) e[o + r] = t[r];\n          return e;\n        };\n      },\n      2908: e => {\n        e.exports = function (e, t) {\n          for (var r = -1, n = null == e ? 0 : e.length; ++r < n;) if (t(e[r], r, e)) return !0;\n          return !1;\n        };\n      },\n      8470: (e, t, r) => {\n        var n = r(7813);\n        e.exports = function (e, t) {\n          for (var r = e.length; r--;) if (n(e[r][0], t)) return r;\n          return -1;\n        };\n      },\n      8866: (e, t, r) => {\n        var n = r(2488),\n          o = r(1469);\n        e.exports = function (e, t, r) {\n          var a = t(e);\n          return o(e) ? a : n(a, r(e));\n        };\n      },\n      4239: (e, t, r) => {\n        var n = r(2705),\n          o = r(9607),\n          a = r(2333),\n          i = n ? n.toStringTag : void 0;\n        e.exports = function (e) {\n          return null == e ? void 0 === e ? \"[object Undefined]\" : \"[object Null]\" : i && i in Object(e) ? o(e) : a(e);\n        };\n      },\n      9454: (e, t, r) => {\n        var n = r(4239),\n          o = r(7005);\n        e.exports = function (e) {\n          return o(e) && \"[object Arguments]\" == n(e);\n        };\n      },\n      939: (e, t, r) => {\n        var n = r(2492),\n          o = r(7005);\n        e.exports = function e(t, r, a, i, s) {\n          return t === r || (null == t || null == r || !o(t) && !o(r) ? t != t && r != r : n(t, r, a, i, e, s));\n        };\n      },\n      2492: (e, t, r) => {\n        var n = r(6384),\n          o = r(7114),\n          a = r(8351),\n          i = r(6096),\n          s = r(4160),\n          u = r(1469),\n          c = r(4144),\n          p = r(6719),\n          l = \"[object Arguments]\",\n          f = \"[object Array]\",\n          v = \"[object Object]\",\n          d = Object.prototype.hasOwnProperty;\n        e.exports = function (e, t, r, h, y, b) {\n          var m = u(e),\n            _ = u(t),\n            g = m ? f : s(e),\n            w = _ ? f : s(t),\n            x = (g = g == l ? v : g) == v,\n            j = (w = w == l ? v : w) == v,\n            E = g == w;\n          if (E && c(e)) {\n            if (!c(t)) return !1;\n            m = !0, x = !1;\n          }\n          if (E && !x) return b || (b = new n()), m || p(e) ? o(e, t, r, h, y, b) : a(e, t, g, r, h, y, b);\n          if (!(1 & r)) {\n            var O = x && d.call(e, \"__wrapped__\"),\n              T = j && d.call(t, \"__wrapped__\");\n            if (O || T) {\n              var S = O ? e.value() : e,\n                A = T ? t.value() : t;\n              return b || (b = new n()), y(S, A, r, h, b);\n            }\n          }\n          return !!E && (b || (b = new n()), i(e, t, r, h, y, b));\n        };\n      },\n      8458: (e, t, r) => {\n        var n = r(3560),\n          o = r(5346),\n          a = r(3218),\n          i = r(346),\n          s = /^\\[object .+?Constructor\\]$/,\n          u = Function.prototype,\n          c = Object.prototype,\n          p = u.toString,\n          l = c.hasOwnProperty,\n          f = RegExp(\"^\" + p.call(l).replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\");\n        e.exports = function (e) {\n          return !(!a(e) || o(e)) && (n(e) ? f : s).test(i(e));\n        };\n      },\n      8749: (e, t, r) => {\n        var n = r(4239),\n          o = r(1780),\n          a = r(7005),\n          i = {};\n        i[\"[object Float32Array]\"] = i[\"[object Float64Array]\"] = i[\"[object Int8Array]\"] = i[\"[object Int16Array]\"] = i[\"[object Int32Array]\"] = i[\"[object Uint8Array]\"] = i[\"[object Uint8ClampedArray]\"] = i[\"[object Uint16Array]\"] = i[\"[object Uint32Array]\"] = !0, i[\"[object Arguments]\"] = i[\"[object Array]\"] = i[\"[object ArrayBuffer]\"] = i[\"[object Boolean]\"] = i[\"[object DataView]\"] = i[\"[object Date]\"] = i[\"[object Error]\"] = i[\"[object Function]\"] = i[\"[object Map]\"] = i[\"[object Number]\"] = i[\"[object Object]\"] = i[\"[object RegExp]\"] = i[\"[object Set]\"] = i[\"[object String]\"] = i[\"[object WeakMap]\"] = !1, e.exports = function (e) {\n          return a(e) && o(e.length) && !!i[n(e)];\n        };\n      },\n      280: (e, t, r) => {\n        var n = r(5726),\n          o = r(6916),\n          a = Object.prototype.hasOwnProperty;\n        e.exports = function (e) {\n          if (!n(e)) return o(e);\n          var t = [];\n          for (var r in Object(e)) a.call(e, r) && \"constructor\" != r && t.push(r);\n          return t;\n        };\n      },\n      2545: e => {\n        e.exports = function (e, t) {\n          for (var r = -1, n = Array(e); ++r < e;) n[r] = t(r);\n          return n;\n        };\n      },\n      1717: e => {\n        e.exports = function (e) {\n          return function (t) {\n            return e(t);\n          };\n        };\n      },\n      4757: e => {\n        e.exports = function (e, t) {\n          return e.has(t);\n        };\n      },\n      4429: (e, t, r) => {\n        var n = r(5639)[\"__core-js_shared__\"];\n        e.exports = n;\n      },\n      7114: (e, t, r) => {\n        var n = r(8668),\n          o = r(2908),\n          a = r(4757);\n        e.exports = function (e, t, r, i, s, u) {\n          var c = 1 & r,\n            p = e.length,\n            l = t.length;\n          if (p != l && !(c && l > p)) return !1;\n          var f = u.get(e),\n            v = u.get(t);\n          if (f && v) return f == t && v == e;\n          var d = -1,\n            h = !0,\n            y = 2 & r ? new n() : void 0;\n          for (u.set(e, t), u.set(t, e); ++d < p;) {\n            var b = e[d],\n              m = t[d];\n            if (i) var _ = c ? i(m, b, d, t, e, u) : i(b, m, d, e, t, u);\n            if (void 0 !== _) {\n              if (_) continue;\n              h = !1;\n              break;\n            }\n            if (y) {\n              if (!o(t, function (e, t) {\n                if (!a(y, t) && (b === e || s(b, e, r, i, u))) return y.push(t);\n              })) {\n                h = !1;\n                break;\n              }\n            } else if (b !== m && !s(b, m, r, i, u)) {\n              h = !1;\n              break;\n            }\n          }\n          return u.delete(e), u.delete(t), h;\n        };\n      },\n      8351: (e, t, r) => {\n        var n = r(2705),\n          o = r(1149),\n          a = r(7813),\n          i = r(7114),\n          s = r(8776),\n          u = r(1814),\n          c = n ? n.prototype : void 0,\n          p = c ? c.valueOf : void 0;\n        e.exports = function (e, t, r, n, c, l, f) {\n          switch (r) {\n            case \"[object DataView]\":\n              if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset) return !1;\n              e = e.buffer, t = t.buffer;\n            case \"[object ArrayBuffer]\":\n              return !(e.byteLength != t.byteLength || !l(new o(e), new o(t)));\n            case \"[object Boolean]\":\n            case \"[object Date]\":\n            case \"[object Number]\":\n              return a(+e, +t);\n            case \"[object Error]\":\n              return e.name == t.name && e.message == t.message;\n            case \"[object RegExp]\":\n            case \"[object String]\":\n              return e == t + \"\";\n            case \"[object Map]\":\n              var v = s;\n            case \"[object Set]\":\n              var d = 1 & n;\n              if (v || (v = u), e.size != t.size && !d) return !1;\n              var h = f.get(e);\n              if (h) return h == t;\n              n |= 2, f.set(e, t);\n              var y = i(v(e), v(t), n, c, l, f);\n              return f.delete(e), y;\n            case \"[object Symbol]\":\n              if (p) return p.call(e) == p.call(t);\n          }\n          return !1;\n        };\n      },\n      6096: (e, t, r) => {\n        var n = r(8234),\n          o = Object.prototype.hasOwnProperty;\n        e.exports = function (e, t, r, a, i, s) {\n          var u = 1 & r,\n            c = n(e),\n            p = c.length;\n          if (p != n(t).length && !u) return !1;\n          for (var l = p; l--;) {\n            var f = c[l];\n            if (!(u ? f in t : o.call(t, f))) return !1;\n          }\n          var v = s.get(e),\n            d = s.get(t);\n          if (v && d) return v == t && d == e;\n          var h = !0;\n          s.set(e, t), s.set(t, e);\n          for (var y = u; ++l < p;) {\n            var b = e[f = c[l]],\n              m = t[f];\n            if (a) var _ = u ? a(m, b, f, t, e, s) : a(b, m, f, e, t, s);\n            if (!(void 0 === _ ? b === m || i(b, m, r, a, s) : _)) {\n              h = !1;\n              break;\n            }\n            y || (y = \"constructor\" == f);\n          }\n          if (h && !y) {\n            var g = e.constructor,\n              w = t.constructor;\n            g == w || !(\"constructor\" in e) || !(\"constructor\" in t) || \"function\" == typeof g && g instanceof g && \"function\" == typeof w && w instanceof w || (h = !1);\n          }\n          return s.delete(e), s.delete(t), h;\n        };\n      },\n      1957: (e, t, r) => {\n        var n = \"object\" == typeof r.g && r.g && r.g.Object === Object && r.g;\n        e.exports = n;\n      },\n      8234: (e, t, r) => {\n        var n = r(8866),\n          o = r(9551),\n          a = r(3674);\n        e.exports = function (e) {\n          return n(e, a, o);\n        };\n      },\n      5050: (e, t, r) => {\n        var n = r(7019);\n        e.exports = function (e, t) {\n          var r = e.__data__;\n          return n(t) ? r[\"string\" == typeof t ? \"string\" : \"hash\"] : r.map;\n        };\n      },\n      852: (e, t, r) => {\n        var n = r(8458),\n          o = r(7801);\n        e.exports = function (e, t) {\n          var r = o(e, t);\n          return n(r) ? r : void 0;\n        };\n      },\n      9607: (e, t, r) => {\n        var n = r(2705),\n          o = Object.prototype,\n          a = o.hasOwnProperty,\n          i = o.toString,\n          s = n ? n.toStringTag : void 0;\n        e.exports = function (e) {\n          var t = a.call(e, s),\n            r = e[s];\n          try {\n            e[s] = void 0;\n            var n = !0;\n          } catch (e) {}\n          var o = i.call(e);\n          return n && (t ? e[s] = r : delete e[s]), o;\n        };\n      },\n      9551: (e, t, r) => {\n        var n = r(4963),\n          o = r(479),\n          a = Object.prototype.propertyIsEnumerable,\n          i = Object.getOwnPropertySymbols,\n          s = i ? function (e) {\n            return null == e ? [] : (e = Object(e), n(i(e), function (t) {\n              return a.call(e, t);\n            }));\n          } : o;\n        e.exports = s;\n      },\n      4160: (e, t, r) => {\n        var n = r(8552),\n          o = r(7071),\n          a = r(3818),\n          i = r(8525),\n          s = r(577),\n          u = r(4239),\n          c = r(346),\n          p = \"[object Map]\",\n          l = \"[object Promise]\",\n          f = \"[object Set]\",\n          v = \"[object WeakMap]\",\n          d = \"[object DataView]\",\n          h = c(n),\n          y = c(o),\n          b = c(a),\n          m = c(i),\n          _ = c(s),\n          g = u;\n        (n && g(new n(new ArrayBuffer(1))) != d || o && g(new o()) != p || a && g(a.resolve()) != l || i && g(new i()) != f || s && g(new s()) != v) && (g = function (e) {\n          var t = u(e),\n            r = \"[object Object]\" == t ? e.constructor : void 0,\n            n = r ? c(r) : \"\";\n          if (n) switch (n) {\n            case h:\n              return d;\n            case y:\n              return p;\n            case b:\n              return l;\n            case m:\n              return f;\n            case _:\n              return v;\n          }\n          return t;\n        }), e.exports = g;\n      },\n      7801: e => {\n        e.exports = function (e, t) {\n          return null == e ? void 0 : e[t];\n        };\n      },\n      1789: (e, t, r) => {\n        var n = r(4536);\n        e.exports = function () {\n          this.__data__ = n ? n(null) : {}, this.size = 0;\n        };\n      },\n      401: e => {\n        e.exports = function (e) {\n          var t = this.has(e) && delete this.__data__[e];\n          return this.size -= t ? 1 : 0, t;\n        };\n      },\n      7667: (e, t, r) => {\n        var n = r(4536),\n          o = Object.prototype.hasOwnProperty;\n        e.exports = function (e) {\n          var t = this.__data__;\n          if (n) {\n            var r = t[e];\n            return \"__lodash_hash_undefined__\" === r ? void 0 : r;\n          }\n          return o.call(t, e) ? t[e] : void 0;\n        };\n      },\n      1327: (e, t, r) => {\n        var n = r(4536),\n          o = Object.prototype.hasOwnProperty;\n        e.exports = function (e) {\n          var t = this.__data__;\n          return n ? void 0 !== t[e] : o.call(t, e);\n        };\n      },\n      1866: (e, t, r) => {\n        var n = r(4536);\n        e.exports = function (e, t) {\n          var r = this.__data__;\n          return this.size += this.has(e) ? 0 : 1, r[e] = n && void 0 === t ? \"__lodash_hash_undefined__\" : t, this;\n        };\n      },\n      5776: e => {\n        var t = /^(?:0|[1-9]\\d*)$/;\n        e.exports = function (e, r) {\n          var n = typeof e;\n          return !!(r = null == r ? 9007199254740991 : r) && (\"number\" == n || \"symbol\" != n && t.test(e)) && e > -1 && e % 1 == 0 && e < r;\n        };\n      },\n      7019: e => {\n        e.exports = function (e) {\n          var t = typeof e;\n          return \"string\" == t || \"number\" == t || \"symbol\" == t || \"boolean\" == t ? \"__proto__\" !== e : null === e;\n        };\n      },\n      5346: (e, t, r) => {\n        var n,\n          o = r(4429),\n          a = (n = /[^.]+$/.exec(o && o.keys && o.keys.IE_PROTO || \"\")) ? \"Symbol(src)_1.\" + n : \"\";\n        e.exports = function (e) {\n          return !!a && a in e;\n        };\n      },\n      5726: e => {\n        var t = Object.prototype;\n        e.exports = function (e) {\n          var r = e && e.constructor;\n          return e === (\"function\" == typeof r && r.prototype || t);\n        };\n      },\n      7040: e => {\n        e.exports = function () {\n          this.__data__ = [], this.size = 0;\n        };\n      },\n      4125: (e, t, r) => {\n        var n = r(8470),\n          o = Array.prototype.splice;\n        e.exports = function (e) {\n          var t = this.__data__,\n            r = n(t, e);\n          return !(r < 0 || (r == t.length - 1 ? t.pop() : o.call(t, r, 1), --this.size, 0));\n        };\n      },\n      2117: (e, t, r) => {\n        var n = r(8470);\n        e.exports = function (e) {\n          var t = this.__data__,\n            r = n(t, e);\n          return r < 0 ? void 0 : t[r][1];\n        };\n      },\n      7518: (e, t, r) => {\n        var n = r(8470);\n        e.exports = function (e) {\n          return n(this.__data__, e) > -1;\n        };\n      },\n      4705: (e, t, r) => {\n        var n = r(8470);\n        e.exports = function (e, t) {\n          var r = this.__data__,\n            o = n(r, e);\n          return o < 0 ? (++this.size, r.push([e, t])) : r[o][1] = t, this;\n        };\n      },\n      4785: (e, t, r) => {\n        var n = r(1989),\n          o = r(8407),\n          a = r(7071);\n        e.exports = function () {\n          this.size = 0, this.__data__ = {\n            hash: new n(),\n            map: new (a || o)(),\n            string: new n()\n          };\n        };\n      },\n      1285: (e, t, r) => {\n        var n = r(5050);\n        e.exports = function (e) {\n          var t = n(this, e).delete(e);\n          return this.size -= t ? 1 : 0, t;\n        };\n      },\n      6e3: (e, t, r) => {\n        var n = r(5050);\n        e.exports = function (e) {\n          return n(this, e).get(e);\n        };\n      },\n      9916: (e, t, r) => {\n        var n = r(5050);\n        e.exports = function (e) {\n          return n(this, e).has(e);\n        };\n      },\n      5265: (e, t, r) => {\n        var n = r(5050);\n        e.exports = function (e, t) {\n          var r = n(this, e),\n            o = r.size;\n          return r.set(e, t), this.size += r.size == o ? 0 : 1, this;\n        };\n      },\n      8776: e => {\n        e.exports = function (e) {\n          var t = -1,\n            r = Array(e.size);\n          return e.forEach(function (e, n) {\n            r[++t] = [n, e];\n          }), r;\n        };\n      },\n      4536: (e, t, r) => {\n        var n = r(852)(Object, \"create\");\n        e.exports = n;\n      },\n      6916: (e, t, r) => {\n        var n = r(5569)(Object.keys, Object);\n        e.exports = n;\n      },\n      1167: (e, t, r) => {\n        e = r.nmd(e);\n        var n = r(1957),\n          o = t && !t.nodeType && t,\n          a = o && e && !e.nodeType && e,\n          i = a && a.exports === o && n.process,\n          s = function () {\n            try {\n              return a && a.require && a.require(\"util\").types || i && i.binding && i.binding(\"util\");\n            } catch (e) {}\n          }();\n        e.exports = s;\n      },\n      2333: e => {\n        var t = Object.prototype.toString;\n        e.exports = function (e) {\n          return t.call(e);\n        };\n      },\n      5569: e => {\n        e.exports = function (e, t) {\n          return function (r) {\n            return e(t(r));\n          };\n        };\n      },\n      5639: (e, t, r) => {\n        var n = r(1957),\n          o = \"object\" == typeof self && self && self.Object === Object && self,\n          a = n || o || Function(\"return this\")();\n        e.exports = a;\n      },\n      619: e => {\n        e.exports = function (e) {\n          return this.__data__.set(e, \"__lodash_hash_undefined__\"), this;\n        };\n      },\n      2385: e => {\n        e.exports = function (e) {\n          return this.__data__.has(e);\n        };\n      },\n      1814: e => {\n        e.exports = function (e) {\n          var t = -1,\n            r = Array(e.size);\n          return e.forEach(function (e) {\n            r[++t] = e;\n          }), r;\n        };\n      },\n      7465: (e, t, r) => {\n        var n = r(8407);\n        e.exports = function () {\n          this.__data__ = new n(), this.size = 0;\n        };\n      },\n      3779: e => {\n        e.exports = function (e) {\n          var t = this.__data__,\n            r = t.delete(e);\n          return this.size = t.size, r;\n        };\n      },\n      7599: e => {\n        e.exports = function (e) {\n          return this.__data__.get(e);\n        };\n      },\n      4758: e => {\n        e.exports = function (e) {\n          return this.__data__.has(e);\n        };\n      },\n      4309: (e, t, r) => {\n        var n = r(8407),\n          o = r(7071),\n          a = r(3369);\n        e.exports = function (e, t) {\n          var r = this.__data__;\n          if (r instanceof n) {\n            var i = r.__data__;\n            if (!o || i.length < 199) return i.push([e, t]), this.size = ++r.size, this;\n            r = this.__data__ = new a(i);\n          }\n          return r.set(e, t), this.size = r.size, this;\n        };\n      },\n      346: e => {\n        var t = Function.prototype.toString;\n        e.exports = function (e) {\n          if (null != e) {\n            try {\n              return t.call(e);\n            } catch (e) {}\n            try {\n              return e + \"\";\n            } catch (e) {}\n          }\n          return \"\";\n        };\n      },\n      7813: e => {\n        e.exports = function (e, t) {\n          return e === t || e != e && t != t;\n        };\n      },\n      5694: (e, t, r) => {\n        var n = r(9454),\n          o = r(7005),\n          a = Object.prototype,\n          i = a.hasOwnProperty,\n          s = a.propertyIsEnumerable,\n          u = n(function () {\n            return arguments;\n          }()) ? n : function (e) {\n            return o(e) && i.call(e, \"callee\") && !s.call(e, \"callee\");\n          };\n        e.exports = u;\n      },\n      1469: e => {\n        var t = Array.isArray;\n        e.exports = t;\n      },\n      8612: (e, t, r) => {\n        var n = r(3560),\n          o = r(1780);\n        e.exports = function (e) {\n          return null != e && o(e.length) && !n(e);\n        };\n      },\n      4144: (e, t, r) => {\n        e = r.nmd(e);\n        var n = r(5639),\n          o = r(5062),\n          a = t && !t.nodeType && t,\n          i = a && e && !e.nodeType && e,\n          s = i && i.exports === a ? n.Buffer : void 0,\n          u = (s ? s.isBuffer : void 0) || o;\n        e.exports = u;\n      },\n      8446: (e, t, r) => {\n        var n = r(939);\n        e.exports = function (e, t) {\n          return n(e, t);\n        };\n      },\n      3560: (e, t, r) => {\n        var n = r(4239),\n          o = r(3218);\n        e.exports = function (e) {\n          if (!o(e)) return !1;\n          var t = n(e);\n          return \"[object Function]\" == t || \"[object GeneratorFunction]\" == t || \"[object AsyncFunction]\" == t || \"[object Proxy]\" == t;\n        };\n      },\n      1780: e => {\n        e.exports = function (e) {\n          return \"number\" == typeof e && e > -1 && e % 1 == 0 && e <= 9007199254740991;\n        };\n      },\n      3218: e => {\n        e.exports = function (e) {\n          var t = typeof e;\n          return null != e && (\"object\" == t || \"function\" == t);\n        };\n      },\n      7005: e => {\n        e.exports = function (e) {\n          return null != e && \"object\" == typeof e;\n        };\n      },\n      6719: (e, t, r) => {\n        var n = r(8749),\n          o = r(1717),\n          a = r(1167),\n          i = a && a.isTypedArray,\n          s = i ? o(i) : n;\n        e.exports = s;\n      },\n      3674: (e, t, r) => {\n        var n = r(4636),\n          o = r(280),\n          a = r(8612);\n        e.exports = function (e) {\n          return a(e) ? n(e) : o(e);\n        };\n      },\n      479: e => {\n        e.exports = function () {\n          return [];\n        };\n      },\n      5062: e => {\n        e.exports = function () {\n          return !1;\n        };\n      },\n      75: function (e) {\n        (function () {\n          var t, r, n, o, a, i;\n          \"undefined\" != typeof performance && null !== performance && performance.now ? e.exports = function () {\n            return performance.now();\n          } : \"undefined\" != typeof process && null !== process && process.hrtime ? (e.exports = function () {\n            return (t() - a) / 1e6;\n          }, r = process.hrtime, o = (t = function () {\n            var e;\n            return 1e9 * (e = r())[0] + e[1];\n          })(), i = 1e9 * process.uptime(), a = o - i) : Date.now ? (e.exports = function () {\n            return Date.now() - n;\n          }, n = Date.now()) : (e.exports = function () {\n            return new Date().getTime() - n;\n          }, n = new Date().getTime());\n        }).call(this);\n      },\n      4087: (e, t, r) => {\n        for (var n = r(75), o =  true ? r.g : 0, a = [\"moz\", \"webkit\"], i = \"AnimationFrame\", s = o[\"request\" + i], u = o[\"cancel\" + i] || o[\"cancelRequest\" + i], c = 0; !s && c < a.length; c++) s = o[a[c] + \"Request\" + i], u = o[a[c] + \"Cancel\" + i] || o[a[c] + \"CancelRequest\" + i];\n        if (!s || !u) {\n          var p = 0,\n            l = 0,\n            f = [];\n          s = function (e) {\n            if (0 === f.length) {\n              var t = n(),\n                r = Math.max(0, 16.666666666666668 - (t - p));\n              p = r + t, setTimeout(function () {\n                var e = f.slice(0);\n                f.length = 0;\n                for (var t = 0; t < e.length; t++) if (!e[t].cancelled) try {\n                  e[t].callback(p);\n                } catch (e) {\n                  setTimeout(function () {\n                    throw e;\n                  }, 0);\n                }\n              }, Math.round(r));\n            }\n            return f.push({\n              handle: ++l,\n              callback: e,\n              cancelled: !1\n            }), l;\n          }, u = function (e) {\n            for (var t = 0; t < f.length; t++) f[t].handle === e && (f[t].cancelled = !0);\n          };\n        }\n        e.exports = function (e) {\n          return s.call(o, e);\n        }, e.exports.cancel = function () {\n          u.apply(o, arguments);\n        }, e.exports.polyfill = function (e) {\n          e || (e = o), e.requestAnimationFrame = s, e.cancelAnimationFrame = u;\n        };\n      },\n      8156: t => {\n        \"use strict\";\n\n        t.exports = e;\n      }\n    },\n    r = {};\n  function n(e) {\n    var o = r[e];\n    if (void 0 !== o) return o.exports;\n    var a = r[e] = {\n      id: e,\n      loaded: !1,\n      exports: {}\n    };\n    return t[e].call(a.exports, a, a.exports, n), a.loaded = !0, a.exports;\n  }\n  n.n = e => {\n    var t = e && e.__esModule ? () => e.default : () => e;\n    return n.d(t, {\n      a: t\n    }), t;\n  }, n.d = (e, t) => {\n    for (var r in t) n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, {\n      enumerable: !0,\n      get: t[r]\n    });\n  }, n.g = function () {\n    if (\"object\" == typeof globalThis) return globalThis;\n    try {\n      return this || new Function(\"return this\")();\n    } catch (e) {\n      if (false) {}\n    }\n  }(), n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), n.nmd = e => (e.paths = [], e.children || (e.children = []), e);\n  var o = {};\n  return (() => {\n    \"use strict\";\n\n    n.d(o, {\n      default: () => d\n    });\n    var e = n(8156),\n      t = n.n(e),\n      r = n(7403),\n      a = n(8446),\n      i = n.n(a);\n    function s(e) {\n      return s = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      }, s(e);\n    }\n    function u(e, t) {\n      for (var r = 0; r < t.length; r++) {\n        var n = t[r];\n        n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, f(n.key), n);\n      }\n    }\n    function c(e, t) {\n      return c = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e, t) {\n        return e.__proto__ = t, e;\n      }, c(e, t);\n    }\n    function p(e) {\n      if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return e;\n    }\n    function l(e) {\n      return l = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (e) {\n        return e.__proto__ || Object.getPrototypeOf(e);\n      }, l(e);\n    }\n    function f(e) {\n      var t = function (e, t) {\n        if (\"object\" !== s(e) || null === e) return e;\n        var r = e[Symbol.toPrimitive];\n        if (void 0 !== r) {\n          var n = r.call(e, \"string\");\n          if (\"object\" !== s(n)) return n;\n          throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n        }\n        return String(e);\n      }(e);\n      return \"symbol\" === s(t) ? t : String(t);\n    }\n    var v = function (e) {\n      !function (e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            writable: !0,\n            configurable: !0\n          }\n        }), Object.defineProperty(e, \"prototype\", {\n          writable: !1\n        }), t && c(e, t);\n      }(h, e);\n      var n,\n        o,\n        a,\n        v,\n        d = (a = h, v = function () {\n          if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n          if (Reflect.construct.sham) return !1;\n          if (\"function\" == typeof Proxy) return !0;\n          try {\n            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;\n          } catch (e) {\n            return !1;\n          }\n        }(), function () {\n          var e,\n            t = l(a);\n          if (v) {\n            var r = l(this).constructor;\n            e = Reflect.construct(t, arguments, r);\n          } else e = t.apply(this, arguments);\n          return function (e, t) {\n            if (t && (\"object\" === s(t) || \"function\" == typeof t)) return t;\n            if (void 0 !== t) throw new TypeError(\"Derived constructors may only return object or undefined\");\n            return p(e);\n          }(this, e);\n        });\n      function h() {\n        var e, t, r, n;\n        !function (e, t) {\n          if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, h);\n        for (var o = arguments.length, a = new Array(o), i = 0; i < o; i++) a[i] = arguments[i];\n        return t = p(e = d.call.apply(d, [this].concat(a))), n = {\n          instance: null\n        }, (r = f(r = \"state\")) in t ? Object.defineProperty(t, r, {\n          value: n,\n          enumerable: !0,\n          configurable: !0,\n          writable: !0\n        }) : t[r] = n, e;\n      }\n      return n = h, (o = [{\n        key: \"componentDidMount\",\n        value: function () {\n          var e = this,\n            t = new r.default(this.typewriter, this.props.options);\n          this.setState({\n            instance: t\n          }, function () {\n            var r = e.props.onInit;\n            r && r(t);\n          });\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function (e) {\n          i()(this.props.options, e.options) || this.setState({\n            instance: new r.default(this.typewriter, this.props.options)\n          });\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function () {\n          this.state.instance && this.state.instance.stop();\n        }\n      }, {\n        key: \"render\",\n        value: function () {\n          var e = this,\n            r = this.props.component;\n          return t().createElement(r, {\n            ref: function (t) {\n              return e.typewriter = t;\n            },\n            className: \"Typewriter\",\n            \"data-testid\": \"typewriter-wrapper\"\n          });\n        }\n      }]) && u(n.prototype, o), Object.defineProperty(n, \"prototype\", {\n        writable: !1\n      }), h;\n    }(e.Component);\n    v.defaultProps = {\n      component: \"div\"\n    };\n    const d = v;\n  })(), o.default;\n})());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/typewriter-effect/dist/react.js\n");

/***/ })

};
;